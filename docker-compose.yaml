version: '3.9'

services:
  order-service:
    image: 'order-service:latest'
    build:
      context: .
    container_name:
      'order-service-container'
    depends_on:
      - order-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/${DB_ORDER_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - JWT_KEY=${JWT_KEY}
      - MICROSERVICES_URL_USER_SERVICE=http://user-service:80
    ports:
      - "8082:80"

  order-db:
    image: postgres
    container_name: 'order-db'
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_ORDER_SCHEMA}

  auth-service:
    image: 'auth-service:latest'
    build:
      context: .
    container_name:
      'auth-service-container'
    depends_on:
      - auth-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/${DB_AUTH_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - JWT_KEY=${JWT_KEY}
    ports:
      - "8081:80"

  auth-db:
    image: postgres
    container_name: 'auth-db'
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_AUTH_SCHEMA}

  user-service:
    image: 'user-service:latest'
    build:
      context: .
    container_name: 'user-service-container'
    depends_on:
      - user-db
      - user-redis-cache
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/${DB_USER_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}

      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_HOST=user-redis-cache
      - JWT_KEY=${JWT_KEY}

    ports:
      - "8080:80"

  user-db:
    image: postgres
    container_name: user-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_USER_SCHEMA}

  user-redis-cache:
    image: 'redis:alpine'
    container_name: 'redis-cache'
    restart: always